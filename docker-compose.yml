version: '3.5'
services:
  mosquitto:
    image: eclipse-mosquitto:latest
    hostname: mosquitto
    container_name: mosquitto
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - webproxy
    ports:
      - "1883:1883"
      - "9001:9001"
      - "8883:8883"
    volumes:
      - ./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/data/pwfile:/mosquitto/data/pwfile
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
      - ./mosquitto/config/ca_certificates:/mosquitto/certs
  db:
    image: mysql:8
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      # So you don't have to use root, but you can if you like
      MYSQL_USER: ${MYSQL_USER}
      # You can use whatever password you like
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      # Password for root access
      MYSQL_ROOT_PASSWORD: ${MYSQL_ALLOW_EMPTY_PASSWORD}
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    volumes:
      - ./my-db:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - webproxy
  python_mqtt_service:
    build:
      context: ./python/mqtt_mysql_service
      dockerfile: ./Dockerfile
      args:
        - MOSQUITTO_IP=${MOSQUITTO_IP}
        - MOSQUITTO_USERNAME=${MOSQUITTO_USERNAME}
        - MOSQUITTO_PASSWORD=${MOSQUITTO_PASSWORD}
        - MYSQL_IP=db
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_ALLOW_EMPTY_PASSWORD=${MYSQL_ALLOW_EMPTY_PASSWORD}
    environment:
      - MOSQUITTO_IP=${MOSQUITTO_IP}
      - MOSQUITTO_USERNAME=${MOSQUITTO_USERNAME}
      - MOSQUITTO_PASSWORD=${MOSQUITTO_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_IP=db
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_ALLOW_EMPTY_PASSWORD=${MYSQL_ALLOW_EMPTY_PASSWORD}
    image: python:3.10.4-slim-buster
    container_name: python_mqtt_mysql_service
    restart: always
    volumes:
      - ./python/mqtt_mysql_service:/app
    networks:
      - webproxy
  python_api_service:
    build:
      context: ./python/python_api_service
      dockerfile: ./Dockerfile
      args:
        - MOSQUITTO_IP=${MOSQUITTO_IP}
        - MOSQUITTO_USERNAME=${MOSQUITTO_USERNAME}
        - MOSQUITTO_PASSWORD=${MOSQUITTO_PASSWORD}
        - MYSQL_IP=db
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_ALLOW_EMPTY_PASSWORD=${MYSQL_ALLOW_EMPTY_PASSWORD}
    environment:
      - MOSQUITTO_IP=${MOSQUITTO_IP}
      - MOSQUITTO_USERNAME=${MOSQUITTO_USERNAME}
      - MOSQUITTO_PASSWORD=${MOSQUITTO_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_IP=db
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_ALLOW_EMPTY_PASSWORD=${MYSQL_ALLOW_EMPTY_PASSWORD}
    image: python:3.10.9-slim-buster
    container_name: python_api_service
    restart: always
    ports:
    - '5000:5000'
    volumes:
      - ./python/python_api_service:/app
    networks:
      - webproxy
# Names our volume

networks:
  webproxy:
    driver: bridge